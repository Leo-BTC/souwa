google.charts.load("current",{packages:["corechart"]}),google.charts.setOnLoadCallback(build_chart_onLoad);var ref_gpu_pytorch="V100 32GB",ref_gpu_pytorch_2023="LambdaCloud V100 16GB",ref_gpu_pytorch_2022="V100 32GB",ref_gpu_tf="V100 32GB",ref_gpu_yolov5="RTX 8000",name_watt="watt";async function build_chart(framework,mode,metric){if(framework.includes("pytorch_2023"))var ref_gpu=ref_gpu_pytorch_2023;else if(framework.includes("pytorch_2022"))ref_gpu=ref_gpu_pytorch_2022;else ref_gpu=ref_gpu_yolov5;if("throughput"==(metric=get_dropdowns(framework).Metric))var title_txt="Relative Training Throughput w.r.t 1x",speedup_txt="Speedup";else if("bs"==metric)title_txt="Relative Largest Training Batch Size w.r.t 1x",speedup_txt="Multiplier";else if("throughput/watt"==metric)title_txt="Relative Training Throughput Per Watt w.r.t 1x",speedup_txt="Speedup";else if("bs/watt"==metric)title_txt="Relative Largest Training Batch Size Per Watt w.r.t 1x",speedup_txt="Multiplier";else if("throughput/$"==metric)title_txt="Relative Training Throughput Per $ w.r.t 1x",speedup_txt="Speedup";else if("bs/$"==metric)title_txt="Relative Largest Training Batch Size Per $ w.r.t 1x",speedup_txt="Multiplier";else if("latency"==metric)title_txt="Relative Inference Latency w.r.t 1x",speedup_txt="Relative Latency";var selected=get_dropdowns(framework);if(framework.includes("pytorch"))if("throughput"==metric||"throughput/watt"==metric||"throughput/$"==metric)var searchable_metric="throughput";else searchable_metric="bs";else searchable_metric="latency";if(framework.includes("pytorch"))var data_chart=await get_data(framework,mode,searchable_metric,selected.Precision);else if("yolov5"==framework)data_chart=await get_data(framework,mode,searchable_metric,selected.Methods);const data_ref=data_chart.filter((item=>item.name_gpu===ref_gpu));data_chart=$.grep(data_chart,(function(n,i){var select=!0;return-1!==selected.NUM_GPU&&(select=n.num_gpu===selected.NUM_GPU),select}));for(var reduced_data_chart=[],distinct_record=[...new Set(data_chart.map((x=>x.name_gpu)))],idx_gpu=0;idx_gpu<distinct_record.length;idx_gpu++){var data_gpu=$.grep(data_chart,(function(n,i){return n.name_gpu===distinct_record[idx_gpu]})),gpu_name=(data_gpu.length,data_gpu[0].name_gpu),record_name=gpu_name,sum_data=0,count=0;for(let key in data_gpu[0])"name_gpu"!=key&&"num_gpu"!=key&&"watt"!=key&&"price"!=key&&0!=data_gpu[0][key]&&("All Models"!=selected.Models&&key!=selected.Models||(sum_data+="throughput/watt"==metric||"bs/watt"==metric?data_gpu[0][key]/data_gpu[0].watt/(1e-5+data_ref[0][key]/data_ref[0].watt):"throughput/$"==metric||"bs/$"==metric?data_gpu[0][key]/data_gpu[0].price/(1e-5+data_ref[0][key]/data_ref[0].price):data_gpu[0][key]/data_ref[0][key],count+=1));var record={RECORD_NAME:record_name,GPU_SHORT:gpu_name,SPEEDUP:(sum_data/(count+1e-6)).toFixed(2)};reduced_data_chart.push(record)}var num_iterms=reduced_data_chart.length;reduced_data_chart.sort((function(a,b){return b.SPEEDUP-a.SPEEDUP}));var google_data=new google.visualization.DataTable;google_data.addColumn("string","RECORD_NAME"),google_data.addColumn("number",speedup_txt),google_data.addColumn({type:"string",role:"style"}),google_data.addRows(num_iterms);for(var i=0;i<num_iterms;i++)google_data.setCell(i,0,reduced_data_chart[i].RECORD_NAME),google_data.setCell(i,1,reduced_data_chart[i].SPEEDUP),reduced_data_chart[i].GPU_SHORT.toString()===ref_gpu?google_data.setCell(i,2,"color: #76b900"):google_data.setCell(i,2,"color: #76b900");var h=22*google_data.getNumberOfRows()+64,initState={selectedValues:[]};for(i=1;i<google_data.getNumberOfColumns();i++)initState.selectedValues.push(google_data.getColumnLabel(i));var options={title:title_txt+ref_gpu+" ("+selected.Models+")",height:h+100,hAxis:{viewWindow:{min:0}},bar:{groupWidth:10},chartArea:{left:330,top:50,bottom:25,backgroundColor:"#FFFFFF"},legend:{position:"none"}};new google.visualization.BarChart(document.getElementById(framework+"_chart")).draw(google_data,options)}function build_chart_onLoad(){build_chart("pytorch_2023","train","throughput"),build_chart("pytorch_2022","train","throughput"),build_chart("yolov5","inference","latency")}
//# sourceURL=21998649.fs1.hubspotusercontent-na1.net/hub/21998649/hub_generated/template_assets/88707358991/1728342366401/LambdaLabs/static/js/benchmarks/chart.js